{
  "id": "actions/post.js",
  "dependencies": [
    {
      "name": "/home/ashik/tuts-project/devConnector/packages/dashboard/.babelrc",
      "includedInParent": true,
      "mtime": 1600687536415
    },
    {
      "name": "/home/ashik/tuts-project/devConnector/packages/dashboard/package.json",
      "includedInParent": true,
      "mtime": 1600687904360
    },
    {
      "name": "@babel/runtime/helpers/interopRequireDefault",
      "parent": "/home/ashik/tuts-project/devConnector/packages/dashboard/src/actions/post.js",
      "resolved": "/home/ashik/tuts-project/devConnector/node_modules/@babel/runtime/helpers/interopRequireDefault.js"
    },
    {
      "name": "@babel/runtime/regenerator",
      "parent": "/home/ashik/tuts-project/devConnector/packages/dashboard/src/actions/post.js",
      "resolved": "/home/ashik/tuts-project/devConnector/node_modules/@babel/runtime/regenerator/index.js"
    },
    {
      "name": "@babel/runtime/helpers/asyncToGenerator",
      "parent": "/home/ashik/tuts-project/devConnector/packages/dashboard/src/actions/post.js",
      "resolved": "/home/ashik/tuts-project/devConnector/node_modules/@babel/runtime/helpers/asyncToGenerator.js"
    },
    {
      "name": "axios",
      "parent": "/home/ashik/tuts-project/devConnector/packages/dashboard/src/actions/post.js",
      "resolved": "/home/ashik/tuts-project/devConnector/node_modules/axios/index.js"
    },
    {
      "name": "./alert",
      "parent": "/home/ashik/tuts-project/devConnector/packages/dashboard/src/actions/post.js",
      "resolved": "/home/ashik/tuts-project/devConnector/packages/dashboard/src/actions/alert.js"
    },
    {
      "name": "./types",
      "parent": "/home/ashik/tuts-project/devConnector/packages/dashboard/src/actions/post.js",
      "resolved": "/home/ashik/tuts-project/devConnector/packages/dashboard/src/actions/types.js"
    }
  ],
  "generated": {
    "js": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteComment = exports.addComment = exports.addPost = exports.deletePost = exports.removeLike = exports.addLike = exports.getPost = exports.getPosts = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _alert = require(\"./alert\");\n\nvar _types = require(\"./types\");\n\n// Get Posts\nvar getPosts = function getPosts() {\n  return /*#__PURE__*/function () {\n    var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(dispatch) {\n      var res;\n      return _regenerator.default.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _axios.default.get(\"\".concat(\"http://localhost:7777\", \"/api/posts\"));\n\n            case 3:\n              res = _context.sent;\n              dispatch({\n                type: _types.GET_POSTS,\n                payload: res.data\n              });\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch({\n                type: _types.POST_ERROR,\n                payload: _context.t0.response.statusText,\n                status: _context.t0.response.status\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}; // GET POST\n\n\nexports.getPosts = getPosts;\n\nvar getPost = function getPost(id) {\n  return /*#__PURE__*/function () {\n    var _ref2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(dispatch) {\n      var res;\n      return _regenerator.default.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _axios.default.get(\"\".concat(\"http://localhost:7777\", \"/api/posts/\").concat(id));\n\n            case 3:\n              res = _context2.sent;\n              dispatch({\n                type: _types.GET_POST,\n                payload: res.data\n              });\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              dispatch({\n                type: _types.POST_ERROR,\n                payload: _context2.t0.response.statusText,\n                status: _context2.t0.response.status\n              });\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}; // ADD LIKE\n\n\nexports.getPost = getPost;\n\nvar addLike = function addLike(postId) {\n  return /*#__PURE__*/function () {\n    var _ref3 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(dispatch) {\n      var res;\n      return _regenerator.default.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _axios.default.put(\"\".concat(\"http://localhost:7777\", \"/api/posts/like/\").concat(postId));\n\n            case 3:\n              res = _context3.sent;\n              dispatch({\n                type: _types.UPDATE_LIKES,\n                payload: {\n                  id: postId,\n                  likes: res.data\n                }\n              });\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              dispatch({\n                type: _types.POST_ERROR,\n                payload: _context3.t0.response.statusText,\n                status: _context3.t0.response.status\n              });\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 7]]);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n}; // REMOVE LIKE\n\n\nexports.addLike = addLike;\n\nvar removeLike = function removeLike(postId) {\n  return /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee4(dispatch) {\n      var res;\n      return _regenerator.default.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return _axios.default.put(\"\".concat(\"http://localhost:7777\", \"/api/posts/unlike/\").concat(postId));\n\n            case 3:\n              res = _context4.sent;\n              dispatch({\n                type: _types.UPDATE_LIKES,\n                payload: {\n                  id: postId,\n                  likes: res.data\n                }\n              });\n              _context4.next = 10;\n              break;\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n              dispatch({\n                type: _types.POST_ERROR,\n                payload: _context4.t0.response.statusText,\n                status: _context4.t0.response.status\n              });\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 7]]);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n}; // DELETE POST\n\n\nexports.removeLike = removeLike;\n\nvar deletePost = function deletePost(id) {\n  return /*#__PURE__*/function () {\n    var _ref5 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee5(dispatch) {\n      return _regenerator.default.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return _axios.default.delete(\"\".concat(\"http://localhost:7777\", \"/api/posts/\").concat(id));\n\n            case 3:\n              dispatch({\n                type: _types.DELETE_POST,\n                payload: id\n              });\n              dispatch((0, _alert.setAlert)(\"Post Removed\", \"success\"));\n              _context5.next = 10;\n              break;\n\n            case 7:\n              _context5.prev = 7;\n              _context5.t0 = _context5[\"catch\"](0);\n              dispatch({\n                type: _types.POST_ERROR,\n                payload: _context5.t0.response.statusText,\n                status: _context5.t0.response.status\n              });\n\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 7]]);\n    }));\n\n    return function (_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n}; // create Post\n\n\nexports.deletePost = deletePost;\n\nvar addPost = function addPost(formData) {\n  return /*#__PURE__*/function () {\n    var _ref6 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee6(dispatch) {\n      var config, res;\n      return _regenerator.default.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              config = {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              };\n              _context6.prev = 1;\n              _context6.next = 4;\n              return _axios.default.post(\"\".concat(\"http://localhost:7777\", \"/api/posts\"), formData, config);\n\n            case 4:\n              res = _context6.sent;\n              dispatch({\n                type: _types.ADD_POST,\n                payload: res.data\n              });\n              dispatch((0, _alert.setAlert)(\"Post Created\", \"success\"));\n              _context6.next = 12;\n              break;\n\n            case 9:\n              _context6.prev = 9;\n              _context6.t0 = _context6[\"catch\"](1);\n              dispatch({\n                type: _types.POST_ERROR,\n                payload: _context6.t0.response.statusText,\n                status: _context6.t0.response.status\n              });\n\n            case 12:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[1, 9]]);\n    }));\n\n    return function (_x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n}; // ADD COMMENT\n\n\nexports.addPost = addPost;\n\nvar addComment = function addComment(postId, formData) {\n  return /*#__PURE__*/function () {\n    var _ref7 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee7(dispatch) {\n      var config, res;\n      return _regenerator.default.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              config = {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              };\n              _context7.prev = 1;\n              _context7.next = 4;\n              return _axios.default.post(\"\".concat(\"http://localhost:7777\", \"/api/posts/comment/\").concat(postId), formData, config);\n\n            case 4:\n              res = _context7.sent;\n              dispatch({\n                type: _types.ADD_COMMENT,\n                payload: res.data\n              });\n              dispatch((0, _alert.setAlert)(\"Comment Added\", \"success\"));\n              _context7.next = 12;\n              break;\n\n            case 9:\n              _context7.prev = 9;\n              _context7.t0 = _context7[\"catch\"](1);\n              dispatch({\n                type: _types.POST_ERROR,\n                payload: _context7.t0.response.statusText,\n                status: _context7.t0.response.status\n              });\n\n            case 12:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[1, 9]]);\n    }));\n\n    return function (_x7) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n}; // DELETE COMMENT\n\n\nexports.addComment = addComment;\n\nvar deleteComment = function deleteComment(postId, commentId) {\n  return /*#__PURE__*/function () {\n    var _ref8 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee8(dispatch) {\n      var res;\n      return _regenerator.default.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              _context8.next = 3;\n              return _axios.default.delete(\"\".concat(\"http://localhost:7777\", \"/api/posts/comment/\").concat(postId, \"/\").concat(commentId));\n\n            case 3:\n              res = _context8.sent;\n              dispatch({\n                type: _types.REMOVE_COMMENT,\n                payload: commentId\n              });\n              dispatch((0, _alert.setAlert)(\"Comment Removed\", \"success\"));\n              _context8.next = 11;\n              break;\n\n            case 8:\n              _context8.prev = 8;\n              _context8.t0 = _context8[\"catch\"](0);\n              dispatch({\n                type: _types.POST_ERROR,\n                payload: _context8.t0.response.statusText,\n                status: _context8.t0.response.status\n              });\n\n            case 11:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[0, 8]]);\n    }));\n\n    return function (_x8) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n};\n\nexports.deleteComment = deleteComment;"
  },
  "sourceMaps": null,
  "error": null,
  "hash": "cf2eb365ae26de5f48586e108066e5c2",
  "cacheData": { "env": { "API_URL": "http://localhost:7777" } }
}
